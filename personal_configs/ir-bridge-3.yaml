substitutions:
  # basement tv
  devicename: ir-bridge-3
  real_devicename: IR Bridge 3
  button_inverted: "true"
  button_gpio: GPIO13
  led_inverted: "true"
  led_gpio: GPIO4
  ir_receiver_gpio: GPIO05
  ir_receiver_inverted: "true"
  ir_transmitter_gpio: GPIO14
  ir_transmitter_inverted: "false"

packages:
  device:
    refresh: 0s
    ref: main
    url: https://github.com/alexyao2015/ESPHomeYAML
    files:
      - yaml/sensors/tuya-ir-bridge/core.yaml

button:
  - platform: template
    name: "${devicename}_Xiaomi Home"
    id: xiaomi_home
    on_press:
      then:
        - remote_transmitter.transmit_raw:
            carrier_frequency: 36kHz
            code: [1000,-580,580,-1160,580,-580,580,-870,580,-1160,580,-580,580,-580,580,-1160,580,-580,580,-870,580,-1160,580,-12180]

  - platform: template
    name: "${devicename}_Xiaomi Back"
    id: xiaomi_back
    on_press:
      then:
        - remote_transmitter.transmit_raw:
            carrier_frequency: 36kHz
            code: [1000,-580,580,-1160,580,-580,580,-870,580,-1160,580,-580,580,-580,580,-870,580,-1450,580,-1160,580,-870,580,-12180]

  - platform: template
    name: "${devicename}_Xiaomi Up"
    id: xiaomi_up
    on_press:
      then:
        - remote_transmitter.transmit_raw:
            carrier_frequency: 36kHz
            code: [1000,-580,580,-1160,580,-580,580,-870,580,-1160,580,-580,580,-580,580,-870,580,-870,580,-1160,580,-1450,580,-12180]

  - platform: template
    name: "${devicename}_Xiaomi Left"
    id: xiaomi_left
    on_press:
      then:
        - remote_transmitter.transmit_raw:
            carrier_frequency: 36kHz
            code: [1000,-580,580,-1160,580,-580,580,-870,580,-1160,580,-580,580,-580,580,-1160,580,-1450,580,-870,580,-870,580,-12180]

  - platform: template
    name: "${devicename}_Xiaomi Right"
    id: xiaomi_right
    on_press:
      then:
        - remote_transmitter.transmit_raw:
            carrier_frequency: 36kHz
            code: [1000,-580,580,-1160,580,-580,580,-870,580,-1160,580,-580,580,-580,580,-1450,580,-580,580,-580,580,-1160,580,-12180]

  - platform: template
    name: "${devicename}_Xiaomi Down"
    id: xiaomi_down
    on_press:
      then:
        - remote_transmitter.transmit_raw:
            carrier_frequency: 36kHz
            code: [1000,-580,580,-1160,580,-580,580,-870,580,-1160,580,-580,580,-580,580,-870,580,-1160,580,-1160,580,-580,580,-12180]

  - platform: template
    name: "${devicename}_Xiaomi Ok"
    id: xiaomi_ok
    on_press:
      then:
        - remote_transmitter.transmit_raw:
            carrier_frequency: 36kHz
            code: [1000,-580,580,-1160,580,-580,580,-870,580,-1160,580,-580,580,-580,580,-1450,580,-870,580,-580,580,-1450,580,-12180]

  - platform: template
    name: "${devicename}_Xiaomi Vol Up"
    id: xiaomi_vol_up
    on_press:
      then:
        - remote_transmitter.transmit_raw:
            carrier_frequency: 36kHz
            code: [1000,-580,580,-1160,580,-580,580,-870,580,-1160,580,-580,580,-580,580,-1450,580,-1160,580,-580,580,-580,580,-12180,1000,-580,580,-1160,580,-580,580,-870,580,-1160,580,-580,580,-580,580,-1450,580,-1160,580,-580,580,-580,580,-12180]

  - platform: template
    name: "${devicename}_Xiaomi Vol Down"
    id: xiaomi_vol_down
    on_press:
      then:
        - remote_transmitter.transmit_raw:
            carrier_frequency: 36kHz
            code: [1000,-580,580,-1160,580,-580,580,-870,580,-1160,580,-580,580,-580,580,-1450,580,-1450,580,-580,580,-870,580,-12180,1000,-580,580,-1160,580,-580,580,-870,580,-1160,580,-580,580,-580,580,-1450,580,-1450,580,-580,580,-870,580,-12180]

  - platform: template
    name: "${devicename}_LG Power"
    id: lg_power
    on_press:
      then:
        - remote_transmitter.transmit_nec:
            address: 0xFB04
            command: 0xF708

  - platform: template
    name: "${devicename}_LG Volume Up"
    id: lg_vol_up
    on_press:
      then:
        - remote_transmitter.transmit_nec:
            address: 0x20DF
            command: 0x40BF

  - platform: template
    name: "${devicename}_LG Volume Down"
    id: lg_vol_down
    on_press:
      then:
        - remote_transmitter.transmit_nec:
            address: 0x20DF
            command: 0xC03F

binary_sensor:
  - platform: remote_receiver
    name: "${devicename}_GiCable Guide Button -> Xiaomi Home"
    gicable:
      command: 0x0C0B
      repeat: false
    on_press:
      then:
        - button.press: xiaomi_home

  - platform: remote_receiver
    name: "${devicename}_GiCable Last -> Xiaomi Back"
    gicable:
      command: 0xC803
      repeat: false
    on_press:
      then:
        - button.press: xiaomi_back

  - platform: remote_receiver
    name: "${devicename}_GiCable UP -> Xiaomi UP"
    gicable:
      command: 0x2C09
      repeat: false
    on_press:
      then:
        - button.press: xiaomi_up

  - platform: remote_receiver
    name: "${devicename}_GiCable Left -> Xiaomi Left"
    gicable:
      command: 0x6C0E
      repeat: false
    on_press:
      then:
        - button.press: xiaomi_left

  - platform: remote_receiver
    name: "${devicename}_GiCable Right -> Xiaomi Right"
    gicable:
      command: 0xEC06
      repeat: false
    on_press:
      then:
        - button.press: xiaomi_right

  - platform: remote_receiver
    name: "${devicename}_GiCable Down -> Xiaomi Down"
    gicable:
      command: 0xAC01
      repeat: false
    on_press:
      then:
        - button.press: xiaomi_down

  - platform: remote_receiver
    name: "${devicename}_GiCable Select -> Xiaomi Ok"
    gicable:
      command: 0x8807
      repeat: false
    on_press:
      then:
        - button.press: xiaomi_ok

  - platform: remote_receiver
    name: "${devicename}_NEC2 Vol Up Repeat -> Xiaomi Vol UP"
    nec2:
      address: 0x0AF5
      command: 0x40BF
      repeat: true
    on_press:
      then:
        - button.press: xiaomi_vol_up

  - platform: remote_receiver
    name: "${devicename}_NEC2 Vol Down Repeat -> Xiaomi Vol Down"
    nec2:
      address: 0x0AF5
      command: 0xA857
      repeat: true
    on_press:
      then:
        - button.press: xiaomi_vol_down

  - platform: remote_receiver
    name: "${devicename}_GiCable Channel Up -> LG Vol Up"
    gicable:
      command: 0xD00A
      repeat: true
    on_press:
      then:
        - button.press: lg_vol_up

  - platform: remote_receiver
    name: "${devicename}_GiCable Channel Down -> LG Vol Down"
    gicable:
      command: 0x3002
      repeat: true
    on_press:
      then:
        - button.press: lg_vol_down
  
  - platform: remote_receiver
    name: "${devicename}_GiCable Cable Power -> LG Power"
    gicable:
      command: 0x5006
      repeat: false
    on_press:
      then:
        - button.press: lg_power
  
  - platform: remote_receiver
    name: "${devicename}_GiCable TV Power -> LG Power"
    nec2:
      address: 0x0AF5
      command: 0xE817
      repeat: true
    on_press:
      then:
        - button.press: lg_power  

script:
  - id: on_gicable
    then:
      - homeassistant.event:
          event: esphome.${devicename}-gicable-received
          data:
            code: !lambda |-
              char formatted[100];
              sprintf(formatted, "Received GiCable: command=0x%04X, repeat=%d", id(gicable_data).command, id(gicable_data).repeat);
              return std::string(formatted);
  - id: on_xmp
    then:
      - homeassistant.event:
          event: esphome.${devicename}-xmp-received
          data:
            code: !lambda |-
              char formatted[100];
              sprintf(formatted, "Received XMP: address=0x%08X, command=0x%08X", id(xmp_data).address, id(xmp_data).command);
              return std::string(formatted);
  - id: on_raw
    then:
      - homeassistant.event:
          event: esphome.${devicename}-raw-received
          data_template:
            code: !lambda |-
              char buf[20];
              std::string res;
              res += "[";
              size_t len = id(raw_data).size();
              for (int i = 0; i < len; i++) {
                if (i + 1 != len) {
                  sprintf(buf, "%d,", id(raw_data).at(i));
                } else {
                  sprintf(buf, "%d ", id(raw_data).at(i));
                }
                res += buf;
              }
              res += "]";
              return res;
globals:
  - id: hold_screen
    type: int
    restore_value: no
    initial_value: '0'

font:
  - file: "arial.ttf"
    id: arial
    size: 12

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x32"
    address: 0x3C
    id: display_1
    pages:
      - id: page1
        lambda: |-
          // prevent screen burn in
          uint8_t start_x = random(0, 12);
          uint8_t start_y = random(0, 20);
          if (id(connection_progress_bar) == 0)
          {
            it.strftime(start_x, start_y, id(arial), "%a %m-%d %I:%M:%S %p", id(homeassistant_time).now());
          }
          else
          {
            if (id(connection_progress_bar) == 1) {
              it.print(start_x, start_y, id(arial), "Connecting ---");
            } else if (id(connection_progress_bar) == 2) {
              it.print(start_x, start_y, id(arial), "Connecting ------");
            } else if (id(connection_progress_bar) == 3) {
              it.print(start_x, start_y, id(arial), "Connecting ---------");
            } else if (id(connection_progress_bar) == 4) {
              it.print(start_x, start_y, id(arial), "Connecting ------------");
            }
          }
      
      - id: page2
        lambda: |-
          // prevent screen burn in
          uint8_t start_x = random(0, 12);
          uint8_t start_y = random(0, 20);
          if (id(relay_active) != 0)
          {
            it.printf(start_x, start_y, id(arial), "Station %d Running", id(relay_active));
            it.printf(start_x, start_y + 13, id(arial), "Time Remaining %d", id(timer_time));
          }
          else
          {
            it.print(start_x, start_y, id(arial), "All Stations Off");
          }

interval:
  - interval: 5s
    then:
      - if:
          condition:
            - lambda: 'return id(hold_screen) == 0;'
          then:
            - script.execute: update_relay_active
            - script.wait: update_relay_active
            - display.page.show_next: display_1
            - component.update: display_1

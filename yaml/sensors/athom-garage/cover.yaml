binary_sensor:
  - platform: gpio
    name: "Garage Contact"
    disabled_by_default: true
    device_class: garage_door
    id: contact
    pin:
      number: GPIO4
      inverted: true
    filters:
      - delayed_on: 20ms

  - platform: gpio
    pin:
      number: GPIO14
      mode: INPUT_PULLUP
      inverted: true
    name: "ESP Button Pressed"
    disabled_by_default: true
    on_multi_click:
      - timing:
          - ON for at most 1s
          - OFF for at least 0.2s
        then:
          - script.execute: trigger_garage_motion
      - timing:
          - ON for at least 4s
        then:
          - button.press: restart_button

switch:
  - platform: gpio
    pin: GPIO5
    id: relay_1

  - platform: template
    name: "Garage Relay"
    id: template_relay_1
    disabled_by_default: true
    optimistic: true
    lambda: |-
      if (id(relay_1).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_on: relay_1
      - light.turn_on:
          id: led_1
          brightness: 100%
          transition_length: 0s
    turn_off_action:
      - switch.turn_off: relay_1
      - light.turn_off:
          id: led_1
          transition_length: 0s

script:
  - id: trigger_garage_motion
    mode: queued
    then:
      - switch.turn_on: template_relay_1
      - delay: 1s
      - switch.turn_off: template_relay_1

  - id: trigger_garage_open_close
    mode: queued
    then:
      - lambda: "id(garage_moving) = true;"
      - script.execute: trigger_garage_motion
      - delay: 15s
      - lambda: "id(garage_moving) = false;"

  - id: ensure_garage_closed
    mode: single
    then:
      - lambda: "id(garage_target) = 1;"
      - while:
          condition:
            lambda: "return id(contact).state;"
          then:
            - script.execute: trigger_garage_open_close
            - delay: 30s

cover:
  - platform: template
    device_class: garage
    name: "Garage Door"
    lambda: "return id(contact).state ? COVER_OPEN : COVER_CLOSED;"
    open_action:
      then:
        - if:
            condition:
              lambda: "return (!id(contact).state && !id(garage_moving)) || (id(garage_target) == 1);"
            then:
              - script.stop: ensure_garage_closed
              - lambda: "id(garage_target) = 2;"
              - script.execute: trigger_garage_open_close
    stop_action:
      - script.stop: ensure_garage_closed
      - script.execute: trigger_garage_motion
    close_action:
      - script.execute: ensure_garage_closed

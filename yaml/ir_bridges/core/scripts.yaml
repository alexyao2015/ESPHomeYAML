interval:
  - interval: 20ms
    then:
      - if:
          condition:
            not:
              - script.is_running: pulse_led
          then:
            - script.execute: pulse_led

script:
  - id: pulse_led
    then:
      - lambda: |-
          if (!(wifi_wificomponent->is_connected())) {
            id(connection_status) = 1;
          } else if (!(api_apiserver->is_connected())) {
            id(connection_status) = 2;
          } else {
            id(connection_status) = 0;
          }
      - if:
          condition:
            lambda: 'return (id(connection_status) == 1);'
          then:
            - script.execute: pulse_led_standard_wifi
            - script.wait: pulse_led_standard_wifi
          else:
            - if:
                condition:
                  lambda: 'return (id(connection_status) == 2);'
                then:
                  - script.execute: pulse_led_standard_api
                  - script.wait: pulse_led_standard_api

  # - id: turn_on_template_relay_id
  #   then:
  #     - lambda: |-
  #         const std::vector<switch_::Switch *>& switch_list = App.get_switches();
  #         String relay_id_tmp = String(id(template_relay_id));
  #         std::string relay_id_str = relay_id_tmp.c_str();
  #         std::string comparison = "template_relay_" + relay_id_str;

  #         for (switch_::Switch* const switch_loop : switch_list) {
  #           if (switch_loop->get_object_id() == comparison) {
  #             switch_loop->turn_on();
  #             break;
  #           }
  #         }

  # - id: turn_off_template_relay_id
  #   then:
  #     - lambda: |-
  #         const std::vector<switch_::Switch *>& switch_list = App.get_switches();
  #         String relay_id_tmp = String(id(template_relay_id));
  #         std::string relay_id_str = relay_id_tmp.c_str();
  #         std::string comparison = "template_relay_" + relay_id_str;

  #         for (switch_::Switch* const switch_loop : switch_list) {
  #           if (switch_loop->get_object_id() == comparison) {
  #             switch_loop->turn_off();
  #             break;
  #           }
  #         }
